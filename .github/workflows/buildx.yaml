name: buildx
on:
  schedule:
    - cron: '0 2 * * *'
  push:
    branches:
      - dev
      - master
    paths-ignore:
        - '.github/**'
  pull_request:
  release:
    types: [published]
  workflow_dispatch:

env:
  aptCacher: ''
  IMAGE: pihole
  PIHOLE_DOCKER_TAG: latest
  NAME: edgd1er/pihole
  S6_OVERLAY_VERSION: v2.2.0.3
  DEBIAN_VERSION: bullseye
  PHP_ENV_CONFIG: /etc/lighttpd/conf-enabled/15-fastcgi-php.conf
  PHP_ERROR_LOG: /var/log/lighttpd/error.log
  DOCKER_PUSH: false
  DOCKER_LOAD: true
  BUILD_NOCACHE: false

jobs:
  buildx:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout dev branch if we are building nightly
        if: github.event_name == 'schedule'
        uses: actions/checkout@v3
        with:
          ref: dev

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          install: true
          use: true

      - name: Builder instance name
        run: echo ${{ steps.buildx.outputs.name }}

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ${{ secrets.DOCKERHUB_USER }}/pihole
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/master') }}
          tags: |
            type=schedule,pattern=nightly
            type=ref,event=branch,enable=${{ github.event_name != 'schedule' }}
            type=ref,event=tag

      - name: Set env DOCKER_PUSH
        run: |
          # tag = latest
          if [[ $BRANCH == 'master' && $GITHUB_EVENT_NAME == 'release' ]]; then
            echo "DOCKER_PUSH=true" >> "$GITHUB_ENV"
            echo "DOCKER_LOAD=false" >> "$GITHUB_ENV"
          fi
          # tag = branch name
          if [[ $BRANCH != 'master'  ]]; then
            echo "DOCKER_PUSH=true" >> "$GITHUB_ENV"
            echo "DOCKER_LOAD=false" >> "$GITHUB_ENV"
          fi

      - name: Build and no push
        if: ${{ env.DOCKER_load }}
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          no-cache: ${{ env.BUILD_NOCACHE }}
          load: true
          build-args: |
            NAME=${{ secrets.DOCKERHUB_USER }}/${{ env.IMAGE }}
            PIHOLE_DOCKER_TAG=${{ steps.meta.outputs.tags }}
            S6_OVERLAY_VERSION=${{ env.S6_OVERLAY_VERSION }}
            PHP_ENV_CONFIG=${{ env.PHP_ENV_CONFIG }}
            MAINTAINER=${{ env.GITHUB_SHA }}
            DEBIAN_VERSION=${{ env.DEBIAN_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: Build multi platforms and push
        if:  ${{ env.DOCKER_PUSH }}
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          no-cache: ${{ env.BUILD_NOCACHE }}
          # removed linux/arm64
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: true
          build-args: |
            NAME=${{ secrets.DOCKERHUB_USER }}/${{ env.IMAGE }}
            PIHOLE_DOCKER_TAG=${{ steps.meta.outputs.tags }}
            S6_OVERLAY_VERSION=${{ env.S6_OVERLAY_VERSION }}
            PHP_ENV_CONFIG=${{ env.PHP_ENV_CONFIG }}
            MAINTAINER=${{ env.GITHUB_SHA }}
            DEBIAN_VERSION=${{ env.DEBIAN_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ secrets.DOCKERHUB_USER }}/${{ env.IMAGE }}:${{steps.meta.outputs.version }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/${{ secrets.DOCKERHUB_USER }}/${{ env.IMAGE }}:${{ steps.meta.outputs.version }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      -
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache